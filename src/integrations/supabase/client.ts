
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';
import { toast } from 'sonner';
import { SUPABASE_URL, SUPABASE_ANON_KEY } from '@/config/env';

// Create a singleton instance to avoid multiple instances
let supabaseInstance: ReturnType<typeof createClient<Database>> | null = null;

// Check if we have the required configuration
if (!SUPABASE_URL || !SUPABASE_ANON_KEY) {
  console.error("Missing Supabase environment variables");
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";
export const supabase = (() => {
  if (!supabaseInstance) {
    console.log("Initializing Supabase client...");
    supabaseInstance = createClient<Database>(
      SUPABASE_URL, 
      SUPABASE_ANON_KEY, 
      {
        auth: {
          persistSession: true,
          storageKey: 'welcomechat_auth_token',
          autoRefreshToken: true,
          detectSessionInUrl: true,
          flowType: 'pkce',
          debug: process.env.NODE_ENV === 'development'
        }
      }
    );
  }
  return supabaseInstance;
})();

// Export a function to force refresh the session if needed
export const refreshSupabaseSession = async () => {
  try {
    const { data, error } = await supabase.auth.refreshSession();
    if (error) {
      console.error("Error refreshing session:", error);
      return false;
    }
    console.log("Session refreshed successfully");
    return true;
  } catch (e) {
    console.error("Exception refreshing session:", e);
    return false;
  }
};

// Re-export the SUPABASE_URL for convenience
export { SUPABASE_URL };
